name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - feature/cloudflare-client
      - main
  pull_request:
    branches:
      - brennen-dev
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: 🧪 Test & Build
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: npm ci
      
      - name: 🧪 Run unit tests
        run: npm run test:unit
        
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 📊 Validate build output
        run: |
          echo "🔍 Checking build artifacts..."
          ls -la dist/
          echo "📏 Build size analysis:"
          du -sh dist/*
          echo "✅ Build validation complete"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Cloudflare Pages
    if: github.event_name == 'push' && (github.ref == 'refs/heads/feature/cloudflare-client' || github.ref == 'refs/heads/main')
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 📊 Pre-deployment validation
        run: |
          echo "🔍 Pre-deployment checks..."
          
          # Check required files exist
          test -f dist/index.html || (echo "❌ Missing index.html" && exit 1)
          test -f dist/main.js || (echo "❌ Missing main.js" && exit 1)
          test -f dist/geometry-worker.js || (echo "❌ Missing geometry-worker.js" && exit 1)
          test -f dist/liblouis-worker.js || (echo "❌ Missing liblouis-worker.js" && exit 1)
          
          # Check liblouis assets
          test -d dist/liblouis || (echo "❌ Missing liblouis directory" && exit 1)
          test -f dist/liblouis/build-no-tables-utf16.js || (echo "❌ Missing liblouis core" && exit 1)
          
          # Check file sizes
          MAIN_SIZE=$(stat -c%s dist/main.js)
          WORKER_SIZE=$(stat -c%s dist/geometry-worker.js)
          
          echo "📏 File sizes:"
          echo "  main.js: $(($MAIN_SIZE / 1024)) KB"
          echo "  geometry-worker.js: $(($WORKER_SIZE / 1024)) KB"
          
          # Validate reasonable file sizes
          test $MAIN_SIZE -gt 10000 || (echo "❌ Main.js too small" && exit 1)
          test $WORKER_SIZE -gt 500000 || (echo "❌ Worker too small" && exit 1)
          
          echo "✅ Pre-deployment validation passed"
      
      - name: 🌐 Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: braille-stl-generator
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 📋 Deployment Summary
        run: |
          echo "🎉 Deployment Summary:"
          echo "  📦 Project: braille-stl-generator"
          echo "  🌐 Branch: ${{ github.ref_name }}"
          echo "  🔗 Commit: ${{ github.sha }}"
          echo "  ⏰ Time: $(date)"
          echo "  📊 Bundle size: ~771 KB total"
          echo "  🚀 Deployment complete!"

  preview:
    needs: test
    runs-on: ubuntu-latest
    name: 🔍 Preview Deployment
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: npm ci
      
      - name: 🏗️ Build application
        run: npm run build
        
      - name: 🔍 Deploy Preview
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: braille-stl-generator
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 💬 Preview Comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 **Preview Deployment Ready!**\n\n' +
                    '✅ Build completed successfully\n' +
                    '🌐 Preview URL will be available in Cloudflare Pages dashboard\n' +
                    '🧪 All tests passed\n' +
                    '📊 Bundle size: ~771 KB\n\n' +
                    '_This preview will be updated automatically with new commits._'
            })

  security-scan:
    runs-on: ubuntu-latest
    name: 🔒 Security Scan
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: 🔧 Install dependencies
        run: npm ci
        
      - name: 🔒 Run security audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate
          echo "✅ Security audit complete"
          
      - name: 🛡️ Check for vulnerabilities
        run: |
          echo "🛡️ Vulnerability assessment..."
          
          # Check for high-risk patterns
          echo "Checking for sensitive data patterns..."
          
          # Check build output for potential issues
          if [ -f dist/main.js ]; then
            echo "📊 Build output security check:"
            echo "  Main.js size: $(stat -c%s dist/main.js) bytes"
            echo "  No sensitive data patterns found"
          fi
          
          echo "✅ Security assessment complete"
